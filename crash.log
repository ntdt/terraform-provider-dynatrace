2019/06/12 16:54:48 [INFO] Terraform version: 0.11.13  
2019/06/12 16:54:48 [INFO] Go runtime version: go1.11.5
2019/06/12 16:54:48 [INFO] CLI args: []string{"/usr/local/bin/terraform", "apply"}
2019/06/12 16:54:48 [DEBUG] Attempting to open CLI config file: /home/bcampoli/.terraformrc
2019/06/12 16:54:48 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2019/06/12 16:54:48 [INFO] CLI command args: []string{"apply"}
2019/06/12 16:54:48 [INFO] command: empty terraform config, returning nil
2019/06/12 16:54:48 [DEBUG] command: no data state file found for backend config
2019/06/12 16:54:48 [DEBUG] New state was assigned lineage "bc39125e-b4c4-5962-4a87-123ef767226b"
2019/06/12 16:54:48 [INFO] command: backend initialized: <nil>
2019/06/12 16:54:48 [DEBUG] checking for provider in "."
2019/06/12 16:54:48 [WARN] found legacy provider "terraform-provider-dynatrace"
2019/06/12 16:54:48 [DEBUG] checking for provider in "/usr/local/bin"
2019/06/12 16:54:48 [DEBUG] checking for provider in ".terraform/plugins/linux_amd64"
2019/06/12 16:54:48 [DEBUG] checking for provider in "/home/bcampoli/.terraform.d/plugins"
2019/06/12 16:54:48 [DEBUG] checking for provider in "/home/bcampoli/.terraform.d/plugins/linux_amd64"
2019/06/12 16:54:48 [WARN] found legacy provider "terraform-provider-cloudfoundry"
2019/06/12 16:54:48 [WARN] found legacy provider "terraform-provider-cloudfoundry.original"
2019/06/12 16:54:48 [DEBUG] found valid plugin: "dynatrace", "0.0.0", "/home/bcampoli/go/src/github.com/terraform-providers/terraform-provider-dynatrace/terraform-provider-dynatrace"
2019/06/12 16:54:48 [DEBUG] found valid plugin: "cloudfoundry", "0.0.0", "/home/bcampoli/.terraform.d/plugins/linux_amd64/terraform-provider-cloudfoundry"
2019/06/12 16:54:48 [DEBUG] found valid plugin: "cloudfoundry.original", "0.0.0", "/home/bcampoli/.terraform.d/plugins/linux_amd64/terraform-provider-cloudfoundry.original"
2019/06/12 16:54:48 [DEBUG] checking for provisioner in "."
2019/06/12 16:54:48 [DEBUG] checking for provisioner in "/usr/local/bin"
2019/06/12 16:54:48 [DEBUG] checking for provisioner in ".terraform/plugins/linux_amd64"
2019/06/12 16:54:48 [DEBUG] checking for provisioner in "/home/bcampoli/.terraform.d/plugins"
2019/06/12 16:54:48 [DEBUG] checking for provisioner in "/home/bcampoli/.terraform.d/plugins/linux_amd64"
2019/06/12 16:54:48 [INFO] command: backend <nil> is not enhanced, wrapping in local
2019/06/12 16:54:48 [INFO] backend/local: starting Apply operation
2019/06/12 16:54:48 [TRACE] Preserving existing state lineage "79bd77fc-b0db-6ac8-4199-e73d006cab0b"
2019/06/12 16:54:48 [TRACE] Preserving existing state lineage "79bd77fc-b0db-6ac8-4199-e73d006cab0b"
2019/06/12 16:54:48 [INFO] terraform: building graph: GraphTypeInput
2019/06/12 16:54:48 [TRACE] ConfigTransformer: Starting for path: []
2019/06/12 16:54:48 [TRACE] Graph after step *terraform.ConfigTransformer:

dynatrace_user.fake-user - *terraform.NodeAbstractResource
2019/06/12 16:54:48 [TRACE] Graph after step *terraform.LocalTransformer:

dynatrace_user.fake-user - *terraform.NodeAbstractResource
2019/06/12 16:54:48 [TRACE] Graph after step *terraform.OutputTransformer:

dynatrace_user.fake-user - *terraform.NodeAbstractResource
2019/06/12 16:54:48 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

dynatrace_user.fake-user - *terraform.NodeAbstractResource
2019/06/12 16:54:48 [TRACE] Graph after step *terraform.OrphanOutputTransformer:

dynatrace_user.fake-user - *terraform.NodeAbstractResource
2019/06/12 16:54:48 [TRACE] AttachResourceConfigTransformer: Beginning...
2019/06/12 16:54:48 [TRACE] AttachResourceConfigTransformer: Attach resource config request: dynatrace_user.fake-user
2019/06/12 16:54:48 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"fake-user", Type:"dynatrace_user", RawCount:(*config.RawConfig)(0xc000394850), RawConfig:(*config.RawConfig)(0xc0003947e0), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2019/06/12 16:54:48 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

dynatrace_user.fake-user - *terraform.NodeAbstractResource
2019/06/12 16:54:48 [DEBUG] Resource state not found for "dynatrace_user.fake-user": dynatrace_user.fake-user
2019/06/12 16:54:48 [TRACE] Graph after step *terraform.AttachStateTransformer:

dynatrace_user.fake-user - *terraform.NodeAbstractResource
2019/06/12 16:54:48 [TRACE] Graph after step *terraform.RootVariableTransformer:

dynatrace_user.fake-user - *terraform.NodeAbstractResource
2019/06/12 16:54:48 [TRACE] ProviderConfigTransformer: Starting for path: []
2019/06/12 16:54:48 [TRACE] Graph after step *terraform.ProviderConfigTransformer:

dynatrace_user.fake-user - *terraform.NodeAbstractResource
2019/06/12 16:54:48 [DEBUG] adding missing provider: dynatrace
2019/06/12 16:54:48 [TRACE] Graph after step *terraform.MissingProviderTransformer:

dynatrace_user.fake-user - *terraform.NodeAbstractResource
provider.dynatrace - *terraform.NodeApplyableProvider
2019/06/12 16:54:48 [DEBUG] resource dynatrace_user.fake-user using provider provider.dynatrace
2019/06/12 16:54:48 [TRACE] Graph after step *terraform.ProviderTransformer:

dynatrace_user.fake-user - *terraform.NodeAbstractResource
  provider.dynatrace - *terraform.NodeApplyableProvider
provider.dynatrace - *terraform.NodeApplyableProvider
2019/06/12 16:54:48 [TRACE] Graph after step *terraform.PruneProviderTransformer:

dynatrace_user.fake-user - *terraform.NodeAbstractResource
  provider.dynatrace - *terraform.NodeApplyableProvider
provider.dynatrace - *terraform.NodeApplyableProvider
2019/06/12 16:54:48 [TRACE] Graph after step *terraform.ParentProviderTransformer:

dynatrace_user.fake-user - *terraform.NodeAbstractResource
  provider.dynatrace - *terraform.NodeApplyableProvider
provider.dynatrace - *terraform.NodeApplyableProvider
2019/06/12 16:54:48 [TRACE] Graph after step *terraform.graphTransformerMulti:

dynatrace_user.fake-user - *terraform.NodeAbstractResource
  provider.dynatrace - *terraform.NodeApplyableProvider
provider.dynatrace - *terraform.NodeApplyableProvider
2019/06/12 16:54:48 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

dynatrace_user.fake-user - *terraform.NodeAbstractResource
  provider.dynatrace - *terraform.NodeApplyableProvider
provider.dynatrace - *terraform.NodeApplyableProvider
2019/06/12 16:54:48 [TRACE] Graph after step *terraform.RemovedModuleTransformer:

dynatrace_user.fake-user - *terraform.NodeAbstractResource
  provider.dynatrace - *terraform.NodeApplyableProvider
provider.dynatrace - *terraform.NodeApplyableProvider
2019/06/12 16:54:48 [DEBUG] ReferenceTransformer: "dynatrace_user.fake-user" references: []
2019/06/12 16:54:48 [DEBUG] ReferenceTransformer: "provider.dynatrace" references: []
2019/06/12 16:54:48 [TRACE] Graph after step *terraform.ReferenceTransformer:

dynatrace_user.fake-user - *terraform.NodeAbstractResource
  provider.dynatrace - *terraform.NodeApplyableProvider
provider.dynatrace - *terraform.NodeApplyableProvider
2019/06/12 16:54:48 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

dynatrace_user.fake-user - *terraform.NodeAbstractResource
  provider.dynatrace - *terraform.NodeApplyableProvider
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  dynatrace_user.fake-user - *terraform.NodeAbstractResource
  provider.dynatrace - *terraform.NodeApplyableProvider
provider.dynatrace - *terraform.NodeApplyableProvider
2019/06/12 16:54:48 [TRACE] Graph after step *terraform.TargetsTransformer:

dynatrace_user.fake-user - *terraform.NodeAbstractResource
  provider.dynatrace - *terraform.NodeApplyableProvider
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  dynatrace_user.fake-user - *terraform.NodeAbstractResource
  provider.dynatrace - *terraform.NodeApplyableProvider
provider.dynatrace - *terraform.NodeApplyableProvider
2019/06/12 16:54:48 [TRACE] Graph after step *terraform.CloseProviderTransformer:

dynatrace_user.fake-user - *terraform.NodeAbstractResource
  provider.dynatrace - *terraform.NodeApplyableProvider
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  dynatrace_user.fake-user - *terraform.NodeAbstractResource
  provider.dynatrace - *terraform.NodeApplyableProvider
provider.dynatrace - *terraform.NodeApplyableProvider
provider.dynatrace (close) - *terraform.graphNodeCloseProvider
  dynatrace_user.fake-user - *terraform.NodeAbstractResource
  provider.dynatrace - *terraform.NodeApplyableProvider
2019/06/12 16:54:48 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

dynatrace_user.fake-user - *terraform.NodeAbstractResource
  provider.dynatrace - *terraform.NodeApplyableProvider
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  dynatrace_user.fake-user - *terraform.NodeAbstractResource
  provider.dynatrace - *terraform.NodeApplyableProvider
provider.dynatrace - *terraform.NodeApplyableProvider
provider.dynatrace (close) - *terraform.graphNodeCloseProvider
  dynatrace_user.fake-user - *terraform.NodeAbstractResource
  provider.dynatrace - *terraform.NodeApplyableProvider
2019/06/12 16:54:48 [TRACE] Graph after step *terraform.RootTransformer:

dynatrace_user.fake-user - *terraform.NodeAbstractResource
  provider.dynatrace - *terraform.NodeApplyableProvider
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  dynatrace_user.fake-user - *terraform.NodeAbstractResource
  provider.dynatrace - *terraform.NodeApplyableProvider
provider.dynatrace - *terraform.NodeApplyableProvider
provider.dynatrace (close) - *terraform.graphNodeCloseProvider
  dynatrace_user.fake-user - *terraform.NodeAbstractResource
  provider.dynatrace - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.dynatrace (close) - *terraform.graphNodeCloseProvider
2019/06/12 16:54:48 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

dynatrace_user.fake-user - *terraform.NodeAbstractResource
  provider.dynatrace - *terraform.NodeApplyableProvider
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  dynatrace_user.fake-user - *terraform.NodeAbstractResource
provider.dynatrace - *terraform.NodeApplyableProvider
provider.dynatrace (close) - *terraform.graphNodeCloseProvider
  dynatrace_user.fake-user - *terraform.NodeAbstractResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.dynatrace (close) - *terraform.graphNodeCloseProvider
2019/06/12 16:54:48 [DEBUG] Starting graph walk: walkInput
2019/06/12 16:54:48 [TRACE] dag/walk: added new vertex: "dynatrace_user.fake-user"
2019/06/12 16:54:48 [TRACE] dag/walk: added new vertex: "provider.dynatrace"
2019/06/12 16:54:48 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2019/06/12 16:54:48 [TRACE] dag/walk: added new vertex: "provider.dynatrace (close)"
2019/06/12 16:54:48 [TRACE] dag/walk: added new vertex: "root"
2019/06/12 16:54:48 [TRACE] dag/walk: added edge: "dynatrace_user.fake-user" waiting on "provider.dynatrace"
2019/06/12 16:54:48 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "dynatrace_user.fake-user"
2019/06/12 16:54:48 [TRACE] dag/walk: added edge: "provider.dynatrace (close)" waiting on "dynatrace_user.fake-user"
2019/06/12 16:54:48 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2019/06/12 16:54:48 [TRACE] dag/walk: added edge: "root" waiting on "provider.dynatrace (close)"
2019/06/12 16:54:48 [TRACE] dag/walk: dependencies changed for "dynatrace_user.fake-user", sending new deps
2019/06/12 16:54:48 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2019/06/12 16:54:48 [TRACE] dag/walk: dependencies changed for "provider.dynatrace (close)", sending new deps
2019/06/12 16:54:48 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2019/06/12 16:54:48 [TRACE] dag/walk: walking "provider.dynatrace"
2019/06/12 16:54:48 [TRACE] vertex 'root.provider.dynatrace': walking
2019/06/12 16:54:48 [TRACE] vertex 'root.provider.dynatrace': evaluating
2019/06/12 16:54:48 [TRACE] [walkInput] Entering eval tree: provider.dynatrace
2019/06/12 16:54:48 [TRACE] root: eval: *terraform.EvalSequence
2019/06/12 16:54:48 [TRACE] root: eval: *terraform.EvalInitProvider
2019-06-12T16:54:48.990-0400 [DEBUG] plugin: starting plugin: path=/home/bcampoli/go/src/github.com/terraform-providers/terraform-provider-dynatrace/terraform-provider-dynatrace args=[/home/bcampoli/go/src/github.com/terraform-providers/terraform-provider-dynatrace/terraform-provider-dynatrace]
2019-06-12T16:54:48.991-0400 [DEBUG] plugin: waiting for RPC address: path=/home/bcampoli/go/src/github.com/terraform-providers/terraform-provider-dynatrace/terraform-provider-dynatrace
2019-06-12T16:54:49.005-0400 [DEBUG] plugin.terraform-provider-dynatrace: plugin address: timestamp=2019-06-12T16:54:49.004-0400 address=/tmp/plugin498719095 network=unix
2019/06/12 16:54:49 [TRACE] root: eval: *terraform.EvalOpFilter
2019/06/12 16:54:49 [TRACE] root: eval: *terraform.EvalSequence
2019/06/12 16:54:49 [TRACE] root: eval: *terraform.EvalGetProvider
2019/06/12 16:54:49 [TRACE] root: eval: *terraform.EvalInterpolateProvider
2019/06/12 16:54:49 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2019/06/12 16:54:49 [TRACE] root: eval: *terraform.EvalInputProvider
2019/06/12 16:54:49 [TRACE] root: eval: terraform.EvalNoop
2019/06/12 16:54:49 [TRACE] root: eval: terraform.EvalNoop
2019/06/12 16:54:49 [TRACE] root: eval: terraform.EvalNoop
2019/06/12 16:54:49 [TRACE] [walkInput] Exiting eval tree: provider.dynatrace
2019/06/12 16:54:49 [TRACE] dag/walk: walking "dynatrace_user.fake-user"
2019/06/12 16:54:49 [TRACE] vertex 'root.dynatrace_user.fake-user': walking
2019/06/12 16:54:49 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2019/06/12 16:54:49 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2019/06/12 16:54:49 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2019/06/12 16:54:49 [TRACE] [walkInput] Entering eval tree: meta.count-boundary (count boundary fixup)
2019/06/12 16:54:49 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2019/06/12 16:54:49 [TRACE] [walkInput] Exiting eval tree: meta.count-boundary (count boundary fixup)
2019/06/12 16:54:49 [TRACE] dag/walk: walking "provider.dynatrace (close)"
2019/06/12 16:54:49 [TRACE] vertex 'root.provider.dynatrace (close)': walking
2019/06/12 16:54:49 [TRACE] vertex 'root.provider.dynatrace (close)': evaluating
2019/06/12 16:54:49 [TRACE] [walkInput] Entering eval tree: provider.dynatrace (close)
2019/06/12 16:54:49 [TRACE] root: eval: *terraform.EvalCloseProvider
2019/06/12 16:54:49 [TRACE] [walkInput] Exiting eval tree: provider.dynatrace (close)
2019/06/12 16:54:49 [TRACE] dag/walk: walking "root"
2019/06/12 16:54:49 [TRACE] vertex 'root.root': walking
2019/06/12 16:54:49 [INFO] terraform: building graph: GraphTypeValidate
2019/06/12 16:54:49 [TRACE] ConfigTransformer: Starting for path: []
2019/06/12 16:54:49 [TRACE] Graph after step *terraform.ConfigTransformer:

dynatrace_user.fake-user - *terraform.NodeValidatableResource
2019/06/12 16:54:49 [TRACE] Graph after step *terraform.LocalTransformer:

dynatrace_user.fake-user - *terraform.NodeValidatableResource
2019/06/12 16:54:49 [TRACE] Graph after step *terraform.OutputTransformer:

dynatrace_user.fake-user - *terraform.NodeValidatableResource
2019/06/12 16:54:49 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

dynatrace_user.fake-user - *terraform.NodeValidatableResource
2019/06/12 16:54:49 [TRACE] Graph after step *terraform.OrphanOutputTransformer:

dynatrace_user.fake-user - *terraform.NodeValidatableResource
2019/06/12 16:54:49 [TRACE] AttachResourceConfigTransformer: Beginning...
2019/06/12 16:54:49 [TRACE] AttachResourceConfigTransformer: Attach resource config request: dynatrace_user.fake-user
2019/06/12 16:54:49 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"fake-user", Type:"dynatrace_user", RawCount:(*config.RawConfig)(0xc000394850), RawConfig:(*config.RawConfig)(0xc0003947e0), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2019/06/12 16:54:49 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

dynatrace_user.fake-user - *terraform.NodeValidatableResource
2019/06/12 16:54:49 [DEBUG] Resource state not found for "dynatrace_user.fake-user": dynatrace_user.fake-user
2019/06/12 16:54:49 [TRACE] Graph after step *terraform.AttachStateTransformer:

dynatrace_user.fake-user - *terraform.NodeValidatableResource
2019/06/12 16:54:49 [TRACE] Graph after step *terraform.RootVariableTransformer:

dynatrace_user.fake-user - *terraform.NodeValidatableResource
2019/06/12 16:54:49 [TRACE] ProviderConfigTransformer: Starting for path: []
2019/06/12 16:54:49 [TRACE] Graph after step *terraform.ProviderConfigTransformer:

dynatrace_user.fake-user - *terraform.NodeValidatableResource
2019/06/12 16:54:49 [DEBUG] adding missing provider: dynatrace
2019/06/12 16:54:49 [TRACE] Graph after step *terraform.MissingProviderTransformer:

dynatrace_user.fake-user - *terraform.NodeValidatableResource
provider.dynatrace - *terraform.NodeApplyableProvider
2019/06/12 16:54:49 [DEBUG] resource dynatrace_user.fake-user using provider provider.dynatrace
2019/06/12 16:54:49 [TRACE] Graph after step *terraform.ProviderTransformer:

dynatrace_user.fake-user - *terraform.NodeValidatableResource
  provider.dynatrace - *terraform.NodeApplyableProvider
provider.dynatrace - *terraform.NodeApplyableProvider
2019/06/12 16:54:49 [TRACE] Graph after step *terraform.PruneProviderTransformer:

dynatrace_user.fake-user - *terraform.NodeValidatableResource
  provider.dynatrace - *terraform.NodeApplyableProvider
provider.dynatrace - *terraform.NodeApplyableProvider
2019/06/12 16:54:49 [TRACE] Graph after step *terraform.ParentProviderTransformer:

dynatrace_user.fake-user - *terraform.NodeValidatableResource
  provider.dynatrace - *terraform.NodeApplyableProvider
provider.dynatrace - *terraform.NodeApplyableProvider
2019/06/12 16:54:49 [TRACE] Graph after step *terraform.graphTransformerMulti:

dynatrace_user.fake-user - *terraform.NodeValidatableResource
  provider.dynatrace - *terraform.NodeApplyableProvider
provider.dynatrace - *terraform.NodeApplyableProvider
2019/06/12 16:54:49 [TRACE] Graph after step *terraform.MissingProvisionerTransformer:

dynatrace_user.fake-user - *terraform.NodeValidatableResource
  provider.dynatrace - *terraform.NodeApplyableProvider
provider.dynatrace - *terraform.NodeApplyableProvider
2019/06/12 16:54:49 [TRACE] Graph after step *terraform.ProvisionerTransformer:

dynatrace_user.fake-user - *terraform.NodeValidatableResource
  provider.dynatrace - *terraform.NodeApplyableProvider
provider.dynatrace - *terraform.NodeApplyableProvider
2019/06/12 16:54:49 [TRACE] Graph after step *terraform.graphTransformerMulti:

dynatrace_user.fake-user - *terraform.NodeValidatableResource
  provider.dynatrace - *terraform.NodeApplyableProvider
provider.dynatrace - *terraform.NodeApplyableProvider
2019/06/12 16:54:49 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

dynatrace_user.fake-user - *terraform.NodeValidatableResource
  provider.dynatrace - *terraform.NodeApplyableProvider
provider.dynatrace - *terraform.NodeApplyableProvider
2019/06/12 16:54:49 [TRACE] Graph after step *terraform.RemovedModuleTransformer:

dynatrace_user.fake-user - *terraform.NodeValidatableResource
  provider.dynatrace - *terraform.NodeApplyableProvider
provider.dynatrace - *terraform.NodeApplyableProvider
2019/06/12 16:54:49 [DEBUG] ReferenceTransformer: "dynatrace_user.fake-user" references: []
2019/06/12 16:54:49 [DEBUG] ReferenceTransformer: "provider.dynatrace" references: []
2019/06/12 16:54:49 [TRACE] Graph after step *terraform.ReferenceTransformer:

dynatrace_user.fake-user - *terraform.NodeValidatableResource
  provider.dynatrace - *terraform.NodeApplyableProvider
provider.dynatrace - *terraform.NodeApplyableProvider
2019/06/12 16:54:49 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

dynatrace_user.fake-user - *terraform.NodeValidatableResource
  provider.dynatrace - *terraform.NodeApplyableProvider
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  dynatrace_user.fake-user - *terraform.NodeValidatableResource
  provider.dynatrace - *terraform.NodeApplyableProvider
provider.dynatrace - *terraform.NodeApplyableProvider
2019/06/12 16:54:49 [TRACE] Graph after step *terraform.TargetsTransformer:

dynatrace_user.fake-user - *terraform.NodeValidatableResource
  provider.dynatrace - *terraform.NodeApplyableProvider
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  dynatrace_user.fake-user - *terraform.NodeValidatableResource
  provider.dynatrace - *terraform.NodeApplyableProvider
provider.dynatrace - *terraform.NodeApplyableProvider
2019/06/12 16:54:49 [TRACE] Graph after step *terraform.CloseProviderTransformer:

dynatrace_user.fake-user - *terraform.NodeValidatableResource
  provider.dynatrace - *terraform.NodeApplyableProvider
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  dynatrace_user.fake-user - *terraform.NodeValidatableResource
  provider.dynatrace - *terraform.NodeApplyableProvider
provider.dynatrace - *terraform.NodeApplyableProvider
provider.dynatrace (close) - *terraform.graphNodeCloseProvider
  dynatrace_user.fake-user - *terraform.NodeValidatableResource
  provider.dynatrace - *terraform.NodeApplyableProvider
2019/06/12 16:54:49 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

dynatrace_user.fake-user - *terraform.NodeValidatableResource
  provider.dynatrace - *terraform.NodeApplyableProvider
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  dynatrace_user.fake-user - *terraform.NodeValidatableResource
  provider.dynatrace - *terraform.NodeApplyableProvider
provider.dynatrace - *terraform.NodeApplyableProvider
provider.dynatrace (close) - *terraform.graphNodeCloseProvider
  dynatrace_user.fake-user - *terraform.NodeValidatableResource
  provider.dynatrace - *terraform.NodeApplyableProvider
2019/06/12 16:54:49 [TRACE] Graph after step *terraform.RootTransformer:

dynatrace_user.fake-user - *terraform.NodeValidatableResource
  provider.dynatrace - *terraform.NodeApplyableProvider
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  dynatrace_user.fake-user - *terraform.NodeValidatableResource
  provider.dynatrace - *terraform.NodeApplyableProvider
provider.dynatrace - *terraform.NodeApplyableProvider
provider.dynatrace (close) - *terraform.graphNodeCloseProvider
  dynatrace_user.fake-user - *terraform.NodeValidatableResource
  provider.dynatrace - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.dynatrace (close) - *terraform.graphNodeCloseProvider
2019/06/12 16:54:49 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

dynatrace_user.fake-user - *terraform.NodeValidatableResource
  provider.dynatrace - *terraform.NodeApplyableProvider
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  dynatrace_user.fake-user - *terraform.NodeValidatableResource
provider.dynatrace - *terraform.NodeApplyableProvider
provider.dynatrace (close) - *terraform.graphNodeCloseProvider
  dynatrace_user.fake-user - *terraform.NodeValidatableResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.dynatrace (close) - *terraform.graphNodeCloseProvider
2019/06/12 16:54:49 [DEBUG] Starting graph walk: walkValidate
2019/06/12 16:54:49 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2019/06/12 16:54:49 [TRACE] dag/walk: added new vertex: "provider.dynatrace (close)"
2019/06/12 16:54:49 [TRACE] dag/walk: added new vertex: "root"
2019/06/12 16:54:49 [TRACE] dag/walk: added new vertex: "dynatrace_user.fake-user"
2019/06/12 16:54:49 [TRACE] dag/walk: added new vertex: "provider.dynatrace"
2019/06/12 16:54:49 [TRACE] dag/walk: added edge: "provider.dynatrace (close)" waiting on "dynatrace_user.fake-user"
2019/06/12 16:54:49 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2019/06/12 16:54:49 [TRACE] dag/walk: added edge: "root" waiting on "provider.dynatrace (close)"
2019/06/12 16:54:49 [TRACE] dag/walk: added edge: "dynatrace_user.fake-user" waiting on "provider.dynatrace"
2019/06/12 16:54:49 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "dynatrace_user.fake-user"
2019/06/12 16:54:49 [TRACE] dag/walk: dependencies changed for "dynatrace_user.fake-user", sending new deps
2019/06/12 16:54:49 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2019/06/12 16:54:49 [TRACE] dag/walk: dependencies changed for "provider.dynatrace (close)", sending new deps
2019/06/12 16:54:49 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2019/06/12 16:54:49 [TRACE] dag/walk: walking "provider.dynatrace"
2019/06/12 16:54:49 [TRACE] vertex 'root.provider.dynatrace': walking
2019/06/12 16:54:49 [TRACE] vertex 'root.provider.dynatrace': evaluating
2019/06/12 16:54:49 [TRACE] [walkValidate] Entering eval tree: provider.dynatrace
2019/06/12 16:54:49 [TRACE] root: eval: *terraform.EvalSequence
2019/06/12 16:54:49 [TRACE] root: eval: *terraform.EvalInitProvider
2019/06/12 16:54:49 [TRACE] root: eval: terraform.EvalNoop
2019/06/12 16:54:49 [TRACE] root: eval: *terraform.EvalOpFilter
2019/06/12 16:54:49 [TRACE] root: eval: *terraform.EvalSequence
2019/06/12 16:54:49 [TRACE] root: eval: *terraform.EvalGetProvider
2019/06/12 16:54:49 [TRACE] root: eval: *terraform.EvalInterpolateProvider
2019/06/12 16:54:49 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2019/06/12 16:54:49 [TRACE] root: eval: *terraform.EvalValidateProvider
2019/06/12 16:54:49 [TRACE] root: eval: terraform.EvalNoop
2019/06/12 16:54:49 [TRACE] root: eval: terraform.EvalNoop
2019/06/12 16:54:49 [TRACE] [walkValidate] Exiting eval tree: provider.dynatrace
2019/06/12 16:54:49 [TRACE] dag/walk: walking "dynatrace_user.fake-user"
2019/06/12 16:54:49 [TRACE] vertex 'root.dynatrace_user.fake-user': walking
2019/06/12 16:54:49 [TRACE] vertex 'root.dynatrace_user.fake-user': evaluating
2019/06/12 16:54:49 [TRACE] [walkValidate] Entering eval tree: dynatrace_user.fake-user
2019/06/12 16:54:49 [TRACE] root: eval: *terraform.EvalSequence
2019/06/12 16:54:49 [TRACE] root: eval: *terraform.EvalInterpolate
2019/06/12 16:54:49 [TRACE] root: eval: *terraform.EvalIf
2019/06/12 16:54:49 [TRACE] root: eval: *terraform.EvalValidateCount
2019/06/12 16:54:49 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2019/06/12 16:54:49 [TRACE] [walkValidate] Exiting eval tree: dynatrace_user.fake-user
2019/06/12 16:54:49 [TRACE] vertex 'root.dynatrace_user.fake-user': expanding/walking dynamic subgraph
2019/06/12 16:54:49 [TRACE] Graph after step *terraform.ResourceCountTransformer:

dynatrace_user.fake-user - *terraform.NodeValidatableResourceInstance
2019/06/12 16:54:49 [DEBUG] Resource state not found for "dynatrace_user.fake-user": dynatrace_user.fake-user
2019/06/12 16:54:49 [TRACE] Graph after step *terraform.AttachStateTransformer:

dynatrace_user.fake-user - *terraform.NodeValidatableResourceInstance
2019/06/12 16:54:49 [TRACE] Graph after step *terraform.TargetsTransformer:

dynatrace_user.fake-user - *terraform.NodeValidatableResourceInstance
2019/06/12 16:54:49 [DEBUG] ReferenceTransformer: "dynatrace_user.fake-user" references: []
2019/06/12 16:54:49 [TRACE] Graph after step *terraform.ReferenceTransformer:

dynatrace_user.fake-user - *terraform.NodeValidatableResourceInstance
2019/06/12 16:54:49 [TRACE] Graph after step *terraform.RootTransformer:

dynatrace_user.fake-user - *terraform.NodeValidatableResourceInstance
2019/06/12 16:54:49 [TRACE] dag/walk: added new vertex: "dynatrace_user.fake-user"
2019/06/12 16:54:49 [TRACE] dag/walk: walking "dynatrace_user.fake-user"
2019/06/12 16:54:49 [TRACE] vertex 'root.dynatrace_user.fake-user': walking
2019/06/12 16:54:49 [TRACE] vertex 'root.dynatrace_user.fake-user': evaluating
2019/06/12 16:54:49 [TRACE] [walkValidate] Entering eval tree: dynatrace_user.fake-user
2019/06/12 16:54:49 [TRACE] root: eval: *terraform.EvalSequence
2019/06/12 16:54:49 [TRACE] root: eval: *terraform.EvalValidateResourceSelfRef
2019/06/12 16:54:49 [TRACE] root: eval: *terraform.EvalGetProvider
2019/06/12 16:54:49 [TRACE] root: eval: *terraform.EvalInterpolate
2019/06/12 16:54:49 [TRACE] root: eval: *terraform.EvalValidateResource
2019/06/12 16:54:49 [TRACE] [walkValidate] Exiting eval tree: dynatrace_user.fake-user
2019/06/12 16:54:49 [TRACE] dag/walk: walking "provider.dynatrace (close)"
2019/06/12 16:54:49 [TRACE] vertex 'root.provider.dynatrace (close)': walking
2019/06/12 16:54:49 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2019/06/12 16:54:49 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2019/06/12 16:54:49 [TRACE] vertex 'root.provider.dynatrace (close)': evaluating
2019/06/12 16:54:49 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2019/06/12 16:54:49 [TRACE] [walkValidate] Entering eval tree: meta.count-boundary (count boundary fixup)
2019/06/12 16:54:49 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2019/06/12 16:54:49 [TRACE] [walkValidate] Exiting eval tree: meta.count-boundary (count boundary fixup)
2019/06/12 16:54:49 [TRACE] [walkValidate] Entering eval tree: provider.dynatrace (close)
2019/06/12 16:54:49 [TRACE] root: eval: *terraform.EvalCloseProvider
2019/06/12 16:54:49 [TRACE] [walkValidate] Exiting eval tree: provider.dynatrace (close)
2019/06/12 16:54:49 [TRACE] dag/walk: walking "root"
2019/06/12 16:54:49 [TRACE] vertex 'root.root': walking
2019/06/12 16:54:49 [INFO] backend/local: apply calling Refresh
2019/06/12 16:54:49 [INFO] terraform: building graph: GraphTypeRefresh
2019/06/12 16:54:49 [TRACE] No managed resources in state during refresh, skipping managed resource transformer
2019/06/12 16:54:49 [TRACE] ConfigTransformer: Starting for path: []
2019/06/12 16:54:49 [TRACE] Graph after step *terraform.ConfigTransformer:

2019/06/12 16:54:49 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

2019/06/12 16:54:49 [TRACE] Graph after step *terraform.AttachStateTransformer:

2019/06/12 16:54:49 [TRACE] AttachResourceConfigTransformer: Beginning...
2019/06/12 16:54:49 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

2019/06/12 16:54:49 [TRACE] Graph after step *terraform.RootVariableTransformer:

2019/06/12 16:54:49 [TRACE] ProviderConfigTransformer: Starting for path: []
2019/06/12 16:54:49 [TRACE] Graph after step *terraform.ProviderConfigTransformer:

2019/06/12 16:54:49 [TRACE] Graph after step *terraform.MissingProviderTransformer:

2019/06/12 16:54:49 [TRACE] Graph after step *terraform.ProviderTransformer:

2019/06/12 16:54:49 [TRACE] Graph after step *terraform.PruneProviderTransformer:

2019/06/12 16:54:49 [TRACE] Graph after step *terraform.ParentProviderTransformer:

2019/06/12 16:54:49 [TRACE] Graph after step *terraform.graphTransformerMulti:

2019/06/12 16:54:49 [TRACE] Graph after step *terraform.LocalTransformer:

2019/06/12 16:54:49 [TRACE] Graph after step *terraform.OutputTransformer:

2019/06/12 16:54:49 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

2019/06/12 16:54:49 [TRACE] Graph after step *terraform.ReferenceTransformer:

2019/06/12 16:54:49 [TRACE] Graph after step *terraform.TargetsTransformer:

2019/06/12 16:54:49 [TRACE] Graph after step *terraform.CloseProviderTransformer:

2019/06/12 16:54:49 [TRACE] Graph after step *terraform.RootTransformer:

root - terraform.graphNodeRoot
2019/06/12 16:54:49 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

root - terraform.graphNodeRoot
2019/06/12 16:54:49 [DEBUG] Starting graph walk: walkRefresh
2019/06/12 16:54:49 [TRACE] dag/walk: added new vertex: "root"
2019/06/12 16:54:49 [TRACE] dag/walk: walking "root"
2019/06/12 16:54:49 [TRACE] vertex 'root.root': walking
2019/06/12 16:54:49 [INFO] backend/local: apply calling Plan
2019/06/12 16:54:49 [INFO] terraform: building graph: GraphTypePlan
2019/06/12 16:54:49 [TRACE] ConfigTransformer: Starting for path: []
2019/06/12 16:54:49 [TRACE] Graph after step *terraform.ConfigTransformer:

dynatrace_user.fake-user - *terraform.NodePlannableResource
2019/06/12 16:54:49 [TRACE] Graph after step *terraform.LocalTransformer:

dynatrace_user.fake-user - *terraform.NodePlannableResource
2019/06/12 16:54:49 [TRACE] Graph after step *terraform.OutputTransformer:

dynatrace_user.fake-user - *terraform.NodePlannableResource
2019/06/12 16:54:49 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

dynatrace_user.fake-user - *terraform.NodePlannableResource
2019/06/12 16:54:49 [TRACE] Graph after step *terraform.OrphanOutputTransformer:

dynatrace_user.fake-user - *terraform.NodePlannableResource
2019/06/12 16:54:49 [TRACE] AttachResourceConfigTransformer: Beginning...
2019/06/12 16:54:49 [TRACE] AttachResourceConfigTransformer: Attach resource config request: dynatrace_user.fake-user
2019/06/12 16:54:49 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"fake-user", Type:"dynatrace_user", RawCount:(*config.RawConfig)(0xc000394850), RawConfig:(*config.RawConfig)(0xc0003947e0), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2019/06/12 16:54:49 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

dynatrace_user.fake-user - *terraform.NodePlannableResource
2019/06/12 16:54:49 [DEBUG] Resource state not found for "dynatrace_user.fake-user": dynatrace_user.fake-user
2019/06/12 16:54:49 [TRACE] Graph after step *terraform.AttachStateTransformer:

dynatrace_user.fake-user - *terraform.NodePlannableResource
2019/06/12 16:54:49 [TRACE] Graph after step *terraform.RootVariableTransformer:

dynatrace_user.fake-user - *terraform.NodePlannableResource
2019/06/12 16:54:49 [TRACE] ProviderConfigTransformer: Starting for path: []
2019/06/12 16:54:49 [TRACE] Graph after step *terraform.ProviderConfigTransformer:

dynatrace_user.fake-user - *terraform.NodePlannableResource
2019/06/12 16:54:49 [DEBUG] adding missing provider: dynatrace
2019/06/12 16:54:49 [TRACE] Graph after step *terraform.MissingProviderTransformer:

dynatrace_user.fake-user - *terraform.NodePlannableResource
provider.dynatrace - *terraform.NodeApplyableProvider
2019/06/12 16:54:49 [DEBUG] resource dynatrace_user.fake-user using provider provider.dynatrace
2019/06/12 16:54:49 [TRACE] Graph after step *terraform.ProviderTransformer:

dynatrace_user.fake-user - *terraform.NodePlannableResource
  provider.dynatrace - *terraform.NodeApplyableProvider
provider.dynatrace - *terraform.NodeApplyableProvider
2019/06/12 16:54:49 [TRACE] Graph after step *terraform.PruneProviderTransformer:

dynatrace_user.fake-user - *terraform.NodePlannableResource
  provider.dynatrace - *terraform.NodeApplyableProvider
provider.dynatrace - *terraform.NodeApplyableProvider
2019/06/12 16:54:49 [TRACE] Graph after step *terraform.ParentProviderTransformer:

dynatrace_user.fake-user - *terraform.NodePlannableResource
  provider.dynatrace - *terraform.NodeApplyableProvider
provider.dynatrace - *terraform.NodeApplyableProvider
2019/06/12 16:54:49 [TRACE] Graph after step *terraform.graphTransformerMulti:

dynatrace_user.fake-user - *terraform.NodePlannableResource
  provider.dynatrace - *terraform.NodeApplyableProvider
provider.dynatrace - *terraform.NodeApplyableProvider
2019/06/12 16:54:49 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

dynatrace_user.fake-user - *terraform.NodePlannableResource
  provider.dynatrace - *terraform.NodeApplyableProvider
provider.dynatrace - *terraform.NodeApplyableProvider
2019/06/12 16:54:49 [TRACE] Graph after step *terraform.RemovedModuleTransformer:

dynatrace_user.fake-user - *terraform.NodePlannableResource
  provider.dynatrace - *terraform.NodeApplyableProvider
provider.dynatrace - *terraform.NodeApplyableProvider
2019/06/12 16:54:49 [DEBUG] ReferenceTransformer: "provider.dynatrace" references: []
2019/06/12 16:54:49 [DEBUG] ReferenceTransformer: "dynatrace_user.fake-user" references: []
2019/06/12 16:54:49 [TRACE] Graph after step *terraform.ReferenceTransformer:

dynatrace_user.fake-user - *terraform.NodePlannableResource
  provider.dynatrace - *terraform.NodeApplyableProvider
provider.dynatrace - *terraform.NodeApplyableProvider
2019/06/12 16:54:49 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

dynatrace_user.fake-user - *terraform.NodePlannableResource
  provider.dynatrace - *terraform.NodeApplyableProvider
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  dynatrace_user.fake-user - *terraform.NodePlannableResource
  provider.dynatrace - *terraform.NodeApplyableProvider
provider.dynatrace - *terraform.NodeApplyableProvider
2019/06/12 16:54:49 [TRACE] Graph after step *terraform.TargetsTransformer:

dynatrace_user.fake-user - *terraform.NodePlannableResource
  provider.dynatrace - *terraform.NodeApplyableProvider
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  dynatrace_user.fake-user - *terraform.NodePlannableResource
  provider.dynatrace - *terraform.NodeApplyableProvider
provider.dynatrace - *terraform.NodeApplyableProvider
2019/06/12 16:54:49 [TRACE] Graph after step *terraform.CloseProviderTransformer:

dynatrace_user.fake-user - *terraform.NodePlannableResource
  provider.dynatrace - *terraform.NodeApplyableProvider
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  dynatrace_user.fake-user - *terraform.NodePlannableResource
  provider.dynatrace - *terraform.NodeApplyableProvider
provider.dynatrace - *terraform.NodeApplyableProvider
provider.dynatrace (close) - *terraform.graphNodeCloseProvider
  dynatrace_user.fake-user - *terraform.NodePlannableResource
  provider.dynatrace - *terraform.NodeApplyableProvider
2019/06/12 16:54:49 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

dynatrace_user.fake-user - *terraform.NodePlannableResource
  provider.dynatrace - *terraform.NodeApplyableProvider
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  dynatrace_user.fake-user - *terraform.NodePlannableResource
  provider.dynatrace - *terraform.NodeApplyableProvider
provider.dynatrace - *terraform.NodeApplyableProvider
provider.dynatrace (close) - *terraform.graphNodeCloseProvider
  dynatrace_user.fake-user - *terraform.NodePlannableResource
  provider.dynatrace - *terraform.NodeApplyableProvider
2019/06/12 16:54:49 [TRACE] Graph after step *terraform.RootTransformer:

dynatrace_user.fake-user - *terraform.NodePlannableResource
  provider.dynatrace - *terraform.NodeApplyableProvider
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  dynatrace_user.fake-user - *terraform.NodePlannableResource
  provider.dynatrace - *terraform.NodeApplyableProvider
provider.dynatrace - *terraform.NodeApplyableProvider
provider.dynatrace (close) - *terraform.graphNodeCloseProvider
  dynatrace_user.fake-user - *terraform.NodePlannableResource
  provider.dynatrace - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.dynatrace (close) - *terraform.graphNodeCloseProvider
2019/06/12 16:54:49 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

dynatrace_user.fake-user - *terraform.NodePlannableResource
  provider.dynatrace - *terraform.NodeApplyableProvider
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  dynatrace_user.fake-user - *terraform.NodePlannableResource
provider.dynatrace - *terraform.NodeApplyableProvider
provider.dynatrace (close) - *terraform.graphNodeCloseProvider
  dynatrace_user.fake-user - *terraform.NodePlannableResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.dynatrace (close) - *terraform.graphNodeCloseProvider
2019/06/12 16:54:49 [DEBUG] Starting graph walk: walkPlan
2019/06/12 16:54:49 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2019/06/12 16:54:49 [TRACE] dag/walk: added new vertex: "provider.dynatrace (close)"
2019/06/12 16:54:49 [TRACE] dag/walk: added new vertex: "root"
2019/06/12 16:54:49 [TRACE] dag/walk: added new vertex: "dynatrace_user.fake-user"
2019/06/12 16:54:49 [TRACE] dag/walk: added new vertex: "provider.dynatrace"
2019/06/12 16:54:49 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2019/06/12 16:54:49 [TRACE] dag/walk: added edge: "root" waiting on "provider.dynatrace (close)"
2019/06/12 16:54:49 [TRACE] dag/walk: added edge: "dynatrace_user.fake-user" waiting on "provider.dynatrace"
2019/06/12 16:54:49 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "dynatrace_user.fake-user"
2019/06/12 16:54:49 [TRACE] dag/walk: added edge: "provider.dynatrace (close)" waiting on "dynatrace_user.fake-user"
2019/06/12 16:54:49 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2019/06/12 16:54:49 [TRACE] dag/walk: dependencies changed for "dynatrace_user.fake-user", sending new deps
2019/06/12 16:54:49 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2019/06/12 16:54:49 [TRACE] dag/walk: dependencies changed for "provider.dynatrace (close)", sending new deps
2019/06/12 16:54:49 [TRACE] dag/walk: walking "provider.dynatrace"
2019/06/12 16:54:49 [TRACE] vertex 'root.provider.dynatrace': walking
2019/06/12 16:54:49 [TRACE] vertex 'root.provider.dynatrace': evaluating
2019/06/12 16:54:49 [TRACE] [walkPlan] Entering eval tree: provider.dynatrace
2019/06/12 16:54:49 [TRACE] root: eval: *terraform.EvalSequence
2019/06/12 16:54:49 [TRACE] root: eval: *terraform.EvalInitProvider
2019/06/12 16:54:49 [TRACE] root: eval: terraform.EvalNoop
2019/06/12 16:54:49 [TRACE] root: eval: terraform.EvalNoop
2019/06/12 16:54:49 [TRACE] root: eval: *terraform.EvalOpFilter
2019/06/12 16:54:49 [TRACE] root: eval: *terraform.EvalSequence
2019/06/12 16:54:49 [TRACE] root: eval: *terraform.EvalGetProvider
2019/06/12 16:54:49 [TRACE] root: eval: *terraform.EvalInterpolateProvider
2019/06/12 16:54:49 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2019/06/12 16:54:49 [TRACE] root: eval: *terraform.EvalOpFilter
2019/06/12 16:54:49 [TRACE] root: eval: *terraform.EvalSequence
2019/06/12 16:54:49 [TRACE] root: eval: *terraform.EvalConfigProvider
2019/06/12 16:54:49 [TRACE] [walkPlan] Exiting eval tree: provider.dynatrace
2019/06/12 16:54:49 [TRACE] dag/walk: walking "dynatrace_user.fake-user"
2019/06/12 16:54:49 [TRACE] vertex 'root.dynatrace_user.fake-user': walking
2019/06/12 16:54:49 [TRACE] vertex 'root.dynatrace_user.fake-user': evaluating
2019/06/12 16:54:49 [TRACE] [walkPlan] Entering eval tree: dynatrace_user.fake-user
2019/06/12 16:54:49 [TRACE] root: eval: *terraform.EvalSequence
2019/06/12 16:54:49 [TRACE] root: eval: *terraform.EvalInterpolate
2019/06/12 16:54:49 [TRACE] root: eval: *terraform.EvalCountCheckComputed
2019/06/12 16:54:49 [TRACE] root: eval: *terraform.EvalIf
2019/06/12 16:54:49 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2019/06/12 16:54:49 [TRACE] [walkPlan] Exiting eval tree: dynatrace_user.fake-user
2019/06/12 16:54:49 [TRACE] vertex 'root.dynatrace_user.fake-user': expanding/walking dynamic subgraph
2019/06/12 16:54:49 [TRACE] Graph after step *terraform.ResourceCountTransformer:

dynatrace_user.fake-user - *terraform.NodePlannableResourceInstance
2019/06/12 16:54:49 [TRACE] OrphanResourceCount: Starting...
2019/06/12 16:54:49 [TRACE] Graph after step *terraform.OrphanResourceCountTransformer:

dynatrace_user.fake-user - *terraform.NodePlannableResourceInstance
2019/06/12 16:54:49 [DEBUG] Resource state not found for "dynatrace_user.fake-user": dynatrace_user.fake-user
2019/06/12 16:54:49 [TRACE] Graph after step *terraform.AttachStateTransformer:

dynatrace_user.fake-user - *terraform.NodePlannableResourceInstance
2019/06/12 16:54:49 [TRACE] Graph after step *terraform.TargetsTransformer:

dynatrace_user.fake-user - *terraform.NodePlannableResourceInstance
2019/06/12 16:54:49 [DEBUG] ReferenceTransformer: "dynatrace_user.fake-user" references: []
2019/06/12 16:54:49 [TRACE] Graph after step *terraform.ReferenceTransformer:

dynatrace_user.fake-user - *terraform.NodePlannableResourceInstance
2019/06/12 16:54:49 [TRACE] Graph after step *terraform.RootTransformer:

dynatrace_user.fake-user - *terraform.NodePlannableResourceInstance
2019/06/12 16:54:49 [TRACE] dag/walk: added new vertex: "dynatrace_user.fake-user"
2019/06/12 16:54:49 [TRACE] dag/walk: walking "dynatrace_user.fake-user"
2019/06/12 16:54:49 [TRACE] vertex 'root.dynatrace_user.fake-user': walking
2019/06/12 16:54:49 [TRACE] vertex 'root.dynatrace_user.fake-user': evaluating
2019/06/12 16:54:49 [TRACE] [walkPlan] Entering eval tree: dynatrace_user.fake-user
2019/06/12 16:54:49 [TRACE] root: eval: *terraform.EvalSequence
2019/06/12 16:54:49 [TRACE] root: eval: *terraform.EvalInterpolate
2019/06/12 16:54:49 [TRACE] root: eval: *terraform.EvalGetProvider
2019/06/12 16:54:49 [TRACE] root: eval: *terraform.EvalValidateResource
2019/06/12 16:54:49 [TRACE] root: eval: *terraform.EvalReadState
2019/06/12 16:54:49 [TRACE] root: eval: *terraform.EvalDiff
2019/06/12 16:54:49 [TRACE] root: eval: *terraform.EvalCheckPreventDestroy
2019/06/12 16:54:49 [TRACE] root: eval: *terraform.EvalWriteState
2019/06/12 16:54:49 [TRACE] root: eval: *terraform.EvalWriteDiff
2019/06/12 16:54:49 [TRACE] [walkPlan] Exiting eval tree: dynatrace_user.fake-user
2019/06/12 16:54:49 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2019/06/12 16:54:49 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2019/06/12 16:54:49 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2019/06/12 16:54:49 [TRACE] [walkPlan] Entering eval tree: meta.count-boundary (count boundary fixup)
2019/06/12 16:54:49 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2019/06/12 16:54:49 [TRACE] [walkPlan] Exiting eval tree: meta.count-boundary (count boundary fixup)
2019/06/12 16:54:49 [TRACE] dag/walk: walking "provider.dynatrace (close)"
2019/06/12 16:54:49 [TRACE] vertex 'root.provider.dynatrace (close)': walking
2019/06/12 16:54:49 [TRACE] vertex 'root.provider.dynatrace (close)': evaluating
2019/06/12 16:54:49 [TRACE] [walkPlan] Entering eval tree: provider.dynatrace (close)
2019/06/12 16:54:49 [TRACE] root: eval: *terraform.EvalCloseProvider
2019/06/12 16:54:49 [TRACE] [walkPlan] Exiting eval tree: provider.dynatrace (close)
2019/06/12 16:54:49 [TRACE] dag/walk: walking "root"
2019/06/12 16:54:49 [TRACE] vertex 'root.root': walking
2019/06/12 16:54:49 [DEBUG] command: asking for input: "Do you want to perform these actions?"
2019/06/12 16:54:50 [INFO] terraform: building graph: GraphTypeApply
2019/06/12 16:54:50 [TRACE] DiffTransformer: starting
2019/06/12 16:54:50 [TRACE] DiffTransformer: Module: CREATE: dynatrace_user.fake-user
  email:         "" => "bcampoli@fake-email.com"
  first_name:    "" => "billy"
  last_name:     "" => "campoli"
  user_groups.#: "0" => "1"
  user_groups.0: "" => "access-server-settings"
  user_id:       "" => "bcampoli777"
2019/06/12 16:54:50 [TRACE] DiffTransformer: Resource "dynatrace_user.fake-user": *terraform.InstanceDiff{mu:sync.Mutex{state:0, sema:0x0}, Attributes:map[string]*terraform.ResourceAttrDiff{"user_groups.#":*terraform.ResourceAttrDiff{Old:"0", New:"1", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "id":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x2}, "user_id":*terraform.ResourceAttrDiff{Old:"", New:"bcampoli777", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "first_name":*terraform.ResourceAttrDiff{Old:"", New:"billy", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "last_name":*terraform.ResourceAttrDiff{Old:"", New:"campoli", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "email":*terraform.ResourceAttrDiff{Old:"", New:"bcampoli@fake-email.com", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "user_groups.0":*terraform.ResourceAttrDiff{Old:"", New:"access-server-settings", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}}, Destroy:false, DestroyDeposed:false, DestroyTainted:false, Meta:map[string]interface {}(nil)}
2019/06/12 16:54:50 [TRACE] Graph after step *terraform.DiffTransformer:

dynatrace_user.fake-user - *terraform.NodeApplyableResource
2019/06/12 16:54:50 [TRACE] Graph after step *terraform.OrphanOutputTransformer:

dynatrace_user.fake-user - *terraform.NodeApplyableResource
2019/06/12 16:54:50 [TRACE] AttachResourceConfigTransformer: Beginning...
2019/06/12 16:54:50 [TRACE] AttachResourceConfigTransformer: Attach resource config request: dynatrace_user.fake-user
2019/06/12 16:54:50 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"fake-user", Type:"dynatrace_user", RawCount:(*config.RawConfig)(0xc000394850), RawConfig:(*config.RawConfig)(0xc0003947e0), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2019/06/12 16:54:50 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

dynatrace_user.fake-user - *terraform.NodeApplyableResource
2019/06/12 16:54:50 [DEBUG] Resource state not found for "dynatrace_user.fake-user": dynatrace_user.fake-user
2019/06/12 16:54:50 [TRACE] Graph after step *terraform.AttachStateTransformer:

dynatrace_user.fake-user - *terraform.NodeApplyableResource
2019/06/12 16:54:50 [TRACE] ProviderConfigTransformer: Starting for path: []
2019/06/12 16:54:50 [TRACE] Graph after step *terraform.ProviderConfigTransformer:

dynatrace_user.fake-user - *terraform.NodeApplyableResource
2019/06/12 16:54:50 [DEBUG] adding missing provider: dynatrace
2019/06/12 16:54:50 [TRACE] Graph after step *terraform.MissingProviderTransformer:

dynatrace_user.fake-user - *terraform.NodeApplyableResource
provider.dynatrace - *terraform.NodeApplyableProvider
2019/06/12 16:54:50 [DEBUG] resource dynatrace_user.fake-user using provider provider.dynatrace
2019/06/12 16:54:50 [TRACE] Graph after step *terraform.ProviderTransformer:

dynatrace_user.fake-user - *terraform.NodeApplyableResource
  provider.dynatrace - *terraform.NodeApplyableProvider
provider.dynatrace - *terraform.NodeApplyableProvider
2019/06/12 16:54:50 [TRACE] Graph after step *terraform.PruneProviderTransformer:

dynatrace_user.fake-user - *terraform.NodeApplyableResource
  provider.dynatrace - *terraform.NodeApplyableProvider
provider.dynatrace - *terraform.NodeApplyableProvider
2019/06/12 16:54:50 [TRACE] Graph after step *terraform.ParentProviderTransformer:

dynatrace_user.fake-user - *terraform.NodeApplyableResource
  provider.dynatrace - *terraform.NodeApplyableProvider
provider.dynatrace - *terraform.NodeApplyableProvider
2019/06/12 16:54:50 [TRACE] Graph after step *terraform.graphTransformerMulti:

dynatrace_user.fake-user - *terraform.NodeApplyableResource
  provider.dynatrace - *terraform.NodeApplyableProvider
provider.dynatrace - *terraform.NodeApplyableProvider
2019/06/12 16:54:50 [TRACE] DestroyEdgeTransformer: Beginning destroy edge transformation...
2019/06/12 16:54:50 [TRACE] Graph after step *terraform.DestroyEdgeTransformer:

dynatrace_user.fake-user - *terraform.NodeApplyableResource
  provider.dynatrace - *terraform.NodeApplyableProvider
provider.dynatrace - *terraform.NodeApplyableProvider
2019/06/12 16:54:50 [TRACE] CBDEdgeTransformer: Beginning CBD transformation...
2019/06/12 16:54:50 [TRACE] Graph after step *terraform.CBDEdgeTransformer:

dynatrace_user.fake-user - *terraform.NodeApplyableResource
  provider.dynatrace - *terraform.NodeApplyableProvider
provider.dynatrace - *terraform.NodeApplyableProvider
2019/06/12 16:54:50 [TRACE] Graph after step *terraform.MissingProvisionerTransformer:

dynatrace_user.fake-user - *terraform.NodeApplyableResource
  provider.dynatrace - *terraform.NodeApplyableProvider
provider.dynatrace - *terraform.NodeApplyableProvider
2019/06/12 16:54:50 [TRACE] Graph after step *terraform.ProvisionerTransformer:

dynatrace_user.fake-user - *terraform.NodeApplyableResource
  provider.dynatrace - *terraform.NodeApplyableProvider
provider.dynatrace - *terraform.NodeApplyableProvider
2019/06/12 16:54:50 [TRACE] Graph after step *terraform.RootVariableTransformer:

dynatrace_user.fake-user - *terraform.NodeApplyableResource
  provider.dynatrace - *terraform.NodeApplyableProvider
provider.dynatrace - *terraform.NodeApplyableProvider
2019/06/12 16:54:50 [TRACE] Graph after step *terraform.LocalTransformer:

dynatrace_user.fake-user - *terraform.NodeApplyableResource
  provider.dynatrace - *terraform.NodeApplyableProvider
provider.dynatrace - *terraform.NodeApplyableProvider
2019/06/12 16:54:50 [TRACE] Graph after step *terraform.OutputTransformer:

dynatrace_user.fake-user - *terraform.NodeApplyableResource
  provider.dynatrace - *terraform.NodeApplyableProvider
provider.dynatrace - *terraform.NodeApplyableProvider
2019/06/12 16:54:50 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

dynatrace_user.fake-user - *terraform.NodeApplyableResource
  provider.dynatrace - *terraform.NodeApplyableProvider
provider.dynatrace - *terraform.NodeApplyableProvider
2019/06/12 16:54:50 [TRACE] Graph after step *terraform.RemovedModuleTransformer:

dynatrace_user.fake-user - *terraform.NodeApplyableResource
  provider.dynatrace - *terraform.NodeApplyableProvider
provider.dynatrace - *terraform.NodeApplyableProvider
2019/06/12 16:54:50 [DEBUG] ReferenceTransformer: "dynatrace_user.fake-user" references: []
2019/06/12 16:54:50 [DEBUG] ReferenceTransformer: "provider.dynatrace" references: []
2019/06/12 16:54:50 [TRACE] Graph after step *terraform.ReferenceTransformer:

dynatrace_user.fake-user - *terraform.NodeApplyableResource
  provider.dynatrace - *terraform.NodeApplyableProvider
provider.dynatrace - *terraform.NodeApplyableProvider
2019/06/12 16:54:50 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

dynatrace_user.fake-user - *terraform.NodeApplyableResource
  provider.dynatrace - *terraform.NodeApplyableProvider
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  dynatrace_user.fake-user - *terraform.NodeApplyableResource
  provider.dynatrace - *terraform.NodeApplyableProvider
provider.dynatrace - *terraform.NodeApplyableProvider
2019/06/12 16:54:50 [TRACE] Graph after step *terraform.TargetsTransformer:

dynatrace_user.fake-user - *terraform.NodeApplyableResource
  provider.dynatrace - *terraform.NodeApplyableProvider
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  dynatrace_user.fake-user - *terraform.NodeApplyableResource
  provider.dynatrace - *terraform.NodeApplyableProvider
provider.dynatrace - *terraform.NodeApplyableProvider
2019/06/12 16:54:50 [TRACE] Graph after step *terraform.CloseProviderTransformer:

dynatrace_user.fake-user - *terraform.NodeApplyableResource
  provider.dynatrace - *terraform.NodeApplyableProvider
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  dynatrace_user.fake-user - *terraform.NodeApplyableResource
  provider.dynatrace - *terraform.NodeApplyableProvider
provider.dynatrace - *terraform.NodeApplyableProvider
provider.dynatrace (close) - *terraform.graphNodeCloseProvider
  dynatrace_user.fake-user - *terraform.NodeApplyableResource
  provider.dynatrace - *terraform.NodeApplyableProvider
2019/06/12 16:54:50 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

dynatrace_user.fake-user - *terraform.NodeApplyableResource
  provider.dynatrace - *terraform.NodeApplyableProvider
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  dynatrace_user.fake-user - *terraform.NodeApplyableResource
  provider.dynatrace - *terraform.NodeApplyableProvider
provider.dynatrace - *terraform.NodeApplyableProvider
provider.dynatrace (close) - *terraform.graphNodeCloseProvider
  dynatrace_user.fake-user - *terraform.NodeApplyableResource
  provider.dynatrace - *terraform.NodeApplyableProvider
2019/06/12 16:54:50 [TRACE] Graph after step *terraform.RootTransformer:

dynatrace_user.fake-user - *terraform.NodeApplyableResource
  provider.dynatrace - *terraform.NodeApplyableProvider
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  dynatrace_user.fake-user - *terraform.NodeApplyableResource
  provider.dynatrace - *terraform.NodeApplyableProvider
provider.dynatrace - *terraform.NodeApplyableProvider
provider.dynatrace (close) - *terraform.graphNodeCloseProvider
  dynatrace_user.fake-user - *terraform.NodeApplyableResource
  provider.dynatrace - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.dynatrace (close) - *terraform.graphNodeCloseProvider
2019/06/12 16:54:50 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

dynatrace_user.fake-user - *terraform.NodeApplyableResource
  provider.dynatrace - *terraform.NodeApplyableProvider
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  dynatrace_user.fake-user - *terraform.NodeApplyableResource
provider.dynatrace - *terraform.NodeApplyableProvider
provider.dynatrace (close) - *terraform.graphNodeCloseProvider
  dynatrace_user.fake-user - *terraform.NodeApplyableResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.dynatrace (close) - *terraform.graphNodeCloseProvider
2019/06/12 16:54:50 [DEBUG] Starting graph walk: walkApply
2019/06/12 16:54:50 [TRACE] dag/walk: added new vertex: "provider.dynatrace (close)"
2019/06/12 16:54:50 [TRACE] dag/walk: added new vertex: "root"
2019/06/12 16:54:50 [TRACE] dag/walk: added new vertex: "dynatrace_user.fake-user"
2019/06/12 16:54:50 [TRACE] dag/walk: added new vertex: "provider.dynatrace"
2019/06/12 16:54:50 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2019/06/12 16:54:50 [TRACE] dag/walk: added edge: "root" waiting on "provider.dynatrace (close)"
2019/06/12 16:54:50 [TRACE] dag/walk: added edge: "dynatrace_user.fake-user" waiting on "provider.dynatrace"
2019/06/12 16:54:50 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "dynatrace_user.fake-user"
2019/06/12 16:54:50 [TRACE] dag/walk: added edge: "provider.dynatrace (close)" waiting on "dynatrace_user.fake-user"
2019/06/12 16:54:50 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2019/06/12 16:54:50 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2019/06/12 16:54:50 [TRACE] dag/walk: dependencies changed for "dynatrace_user.fake-user", sending new deps
2019/06/12 16:54:50 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2019/06/12 16:54:50 [TRACE] dag/walk: dependencies changed for "provider.dynatrace (close)", sending new deps
2019/06/12 16:54:50 [TRACE] dag/walk: walking "provider.dynatrace"
2019/06/12 16:54:50 [TRACE] vertex 'root.provider.dynatrace': walking
2019/06/12 16:54:50 [TRACE] vertex 'root.provider.dynatrace': evaluating
2019/06/12 16:54:50 [TRACE] [walkApply] Entering eval tree: provider.dynatrace
2019/06/12 16:54:50 [TRACE] root: eval: *terraform.EvalSequence
2019/06/12 16:54:50 [TRACE] root: eval: *terraform.EvalInitProvider
2019/06/12 16:54:50 [TRACE] root: eval: terraform.EvalNoop
2019/06/12 16:54:50 [TRACE] root: eval: terraform.EvalNoop
2019/06/12 16:54:50 [TRACE] root: eval: *terraform.EvalOpFilter
2019/06/12 16:54:50 [TRACE] root: eval: *terraform.EvalSequence
2019/06/12 16:54:50 [TRACE] root: eval: *terraform.EvalGetProvider
2019/06/12 16:54:50 [TRACE] root: eval: *terraform.EvalInterpolateProvider
2019/06/12 16:54:50 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2019/06/12 16:54:50 [TRACE] root: eval: *terraform.EvalOpFilter
2019/06/12 16:54:50 [TRACE] root: eval: *terraform.EvalSequence
2019/06/12 16:54:50 [TRACE] root: eval: *terraform.EvalConfigProvider
2019/06/12 16:54:50 [TRACE] [walkApply] Exiting eval tree: provider.dynatrace
2019/06/12 16:54:50 [TRACE] dag/walk: walking "dynatrace_user.fake-user"
2019/06/12 16:54:50 [TRACE] vertex 'root.dynatrace_user.fake-user': walking
2019/06/12 16:54:50 [TRACE] vertex 'root.dynatrace_user.fake-user': evaluating
2019/06/12 16:54:50 [TRACE] [walkApply] Entering eval tree: dynatrace_user.fake-user
2019/06/12 16:54:50 [TRACE] root: eval: *terraform.EvalSequence
2019/06/12 16:54:50 [TRACE] root: eval: *terraform.EvalInstanceInfo
2019/06/12 16:54:50 [TRACE] root: eval: *terraform.EvalReadDiff
2019/06/12 16:54:50 [TRACE] root: eval: *terraform.EvalIf
2019/06/12 16:54:50 [TRACE] root: eval: terraform.EvalNoop
2019/06/12 16:54:50 [TRACE] root: eval: *terraform.EvalIf
2019/06/12 16:54:50 [TRACE] root: eval: *terraform.EvalInterpolate
2019/06/12 16:54:50 [TRACE] root: eval: *terraform.EvalInterpolate
2019/06/12 16:54:50 [TRACE] root: eval: *terraform.EvalGetProvider
2019/06/12 16:54:50 [TRACE] root: eval: *terraform.EvalReadState
2019/06/12 16:54:50 [TRACE] root: eval: *terraform.EvalValidateResource
2019/06/12 16:54:50 [TRACE] root: eval: *terraform.EvalDiff
2019/06/12 16:54:50 [TRACE] root: eval: *terraform.EvalReadDiff
2019/06/12 16:54:50 [TRACE] root: eval: *terraform.EvalCompareDiff
2019/06/12 16:54:50 [TRACE] root: eval: *terraform.EvalGetProvider
2019/06/12 16:54:50 [TRACE] root: eval: *terraform.EvalReadState
2019/06/12 16:54:50 [TRACE] root: eval: *terraform.EvalApplyPre
2019/06/12 16:54:50 [TRACE] root: eval: *terraform.EvalApply
2019/06/12 16:54:50 [DEBUG] apply: dynatrace_user.fake-user: executing Apply
2019-06-12T16:54:50.721-0400 [DEBUG] plugin.terraform-provider-dynatrace: panic: interface conversion: interface {} is []interface {}, not []string
2019-06-12T16:54:50.721-0400 [DEBUG] plugin.terraform-provider-dynatrace: 
2019-06-12T16:54:50.721-0400 [DEBUG] plugin.terraform-provider-dynatrace: goroutine 42 [running]:
2019-06-12T16:54:50.721-0400 [DEBUG] plugin.terraform-provider-dynatrace: main.getUserConfig(0xc0003d6380, 0xc0003d4940)
2019-06-12T16:54:50.721-0400 [DEBUG] plugin.terraform-provider-dynatrace: 	/home/bcampoli/go/src/github.com/terraform-providers/terraform-provider-dynatrace/resource_user.go:123 +0x49b
2019-06-12T16:54:50.721-0400 [DEBUG] plugin.terraform-provider-dynatrace: main.resourceUserCreate(0xc0003d6380, 0xc5dc20, 0xc0003d4380, 0x24, 0x1607c20)
2019-06-12T16:54:50.721-0400 [DEBUG] plugin.terraform-provider-dynatrace: 	/home/bcampoli/go/src/github.com/terraform-providers/terraform-provider-dynatrace/resource_user.go:52 +0xfc
2019-06-12T16:54:50.721-0400 [DEBUG] plugin.terraform-provider-dynatrace: github.com/hashicorp/terraform/helper/schema.(*Resource).Apply(0xc00036f960, 0xc00017d9f0, 0xc0003d48c0, 0xc5dc20, 0xc0003d4380, 0x40d601, 0xc00006cb80, 0x4c2a9c)
2019-06-12T16:54:50.721-0400 [DEBUG] plugin.terraform-provider-dynatrace: 	/home/bcampoli/go/src/github.com/hashicorp/terraform/helper/schema/resource.go:225 +0x351
2019-06-12T16:54:50.721-0400 [DEBUG] plugin.terraform-provider-dynatrace: github.com/hashicorp/terraform/helper/schema.(*Provider).Apply(0xc00036f9d0, 0xc00017d9a0, 0xc00017d9f0, 0xc0003d48c0, 0xc000296a80, 0x18, 0x7feeceec26c0)
2019-06-12T16:54:50.721-0400 [DEBUG] plugin.terraform-provider-dynatrace: 	/home/bcampoli/go/src/github.com/hashicorp/terraform/helper/schema/provider.go:283 +0x9c
2019-06-12T16:54:50.721-0400 [DEBUG] plugin.terraform-provider-dynatrace: github.com/hashicorp/terraform/plugin.(*ResourceProviderServer).Apply(0xc000387de0, 0xc0003d44a0, 0xc0003d8480, 0x0, 0x0)
2019-06-12T16:54:50.721-0400 [DEBUG] plugin.terraform-provider-dynatrace: 	/home/bcampoli/go/src/github.com/hashicorp/terraform/plugin/resource_provider.go:527 +0x57
2019-06-12T16:54:50.721-0400 [DEBUG] plugin.terraform-provider-dynatrace: reflect.Value.call(0xc00015bf80, 0xc00000e920, 0x13, 0xde118c, 0x4, 0xc00006cf18, 0x3, 0x3, 0xc000163ec0, 0xc000398340, ...)
2019-06-12T16:54:50.721-0400 [DEBUG] plugin.terraform-provider-dynatrace: 	/usr/local/go/src/reflect/value.go:447 +0x449
2019-06-12T16:54:50.721-0400 [DEBUG] plugin.terraform-provider-dynatrace: reflect.Value.Call(0xc00015bf80, 0xc00000e920, 0x13, 0xc000364718, 0x3, 0x3, 0x0, 0xc000384c60, 0x0)
2019-06-12T16:54:50.721-0400 [DEBUG] plugin.terraform-provider-dynatrace: 	/usr/local/go/src/reflect/value.go:308 +0xa4
2019-06-12T16:54:50.721-0400 [DEBUG] plugin.terraform-provider-dynatrace: net/rpc.(*service).call(0xc0003a8880, 0xc00009ebe0, 0xc0000350f8, 0xc000035110, 0xc0003ac900, 0xc0003d42e0, 0xc563e0, 0xc0003d44a0, 0x16, 0xc56420, ...)
2019-06-12T16:54:50.721-0400 [DEBUG] plugin.terraform-provider-dynatrace: 	/usr/local/go/src/net/rpc/server.go:384 +0x14e
2019-06-12T16:54:50.721-0400 [DEBUG] plugin.terraform-provider-dynatrace: created by net/rpc.(*Server).ServeCodec
2019-06-12T16:54:50.721-0400 [DEBUG] plugin.terraform-provider-dynatrace: 	/usr/local/go/src/net/rpc/server.go:481 +0x47e
2019/06/12 16:54:50 [TRACE] root: eval: *terraform.EvalWriteState
2019/06/12 16:54:50 [TRACE] root: eval: *terraform.EvalApplyProvisioners
2019/06/12 16:54:50 [TRACE] root: eval: *terraform.EvalIf
2019/06/12 16:54:50 [TRACE] root: eval: *terraform.EvalWriteState
2019/06/12 16:54:50 [TRACE] root: eval: *terraform.EvalWriteDiff
2019/06/12 16:54:50 [TRACE] root: eval: *terraform.EvalApplyPost
2019/06/12 16:54:50 [ERROR] root: eval: *terraform.EvalApplyPost, err: 1 error(s) occurred:

* dynatrace_user.fake-user: unexpected EOF
2019/06/12 16:54:50 [ERROR] root: eval: *terraform.EvalSequence, err: 1 error(s) occurred:

* dynatrace_user.fake-user: unexpected EOF
2019/06/12 16:54:50 [TRACE] [walkApply] Exiting eval tree: dynatrace_user.fake-user
2019/06/12 16:54:50 [TRACE] dag/walk: upstream errored, not walking "meta.count-boundary (count boundary fixup)"
2019/06/12 16:54:50 [TRACE] dag/walk: upstream errored, not walking "provider.dynatrace (close)"
2019/06/12 16:54:50 [TRACE] dag/walk: upstream errored, not walking "root"
2019/06/12 16:54:50 [TRACE] Preserving existing state lineage "79bd77fc-b0db-6ac8-4199-e73d006cab0b"
2019-06-12T16:54:50.724-0400 [DEBUG] plugin: plugin process exited: path=/home/bcampoli/go/src/github.com/terraform-providers/terraform-provider-dynatrace/terraform-provider-dynatrace
2019/06/12 16:54:50 [TRACE] Preserving existing state lineage "79bd77fc-b0db-6ac8-4199-e73d006cab0b"
2019/06/12 16:54:50 [TRACE] Preserving existing state lineage "79bd77fc-b0db-6ac8-4199-e73d006cab0b"
2019/06/12 16:54:50 [TRACE] Preserving existing state lineage "79bd77fc-b0db-6ac8-4199-e73d006cab0b"
2019/06/12 16:54:50 [DEBUG] plugin: waiting for all plugin processes to complete...
2019-06-12T16:54:50.738-0400 [WARN ] plugin: error closing client during Kill: err="connection is shut down"
